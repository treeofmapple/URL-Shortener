spring:
  datasource:
    url: jdbc:h2:mem:testdb
    username: sa
    password:
    driver-class-name: org.h2.Driver
  jpa:
    open-in-view: true
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
  output:
    ansi:
      enabled: always
  aop:
    auto: true # When you don't need logging.
  banner:
    location: classpath:banner.txt
  main:
    banner-mode: console
  security:
    user: 
      name: admin
      password: ${SECURITY_PASSWORD}
  data:
    redis:
      host: ${REDIS_HOST_TEST}
      port: ${REDIS_PORT_TEST}
      username: ${REDIS_USERNAME_TEST}
      password: ${REDIS_PASSWORD_TEST}
      timeout: 5000
      ssl:
        enabled: ${REDIS_SSL_TEST}
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          time-between-eviction-runs: 1s

application:
  database:
    expired:
      time: ${EXPIRED_DATA:1200000}
  redis:
    default:
      time:
        shortUrl: "10m"
        userSessions: "1h"
    sheduled:
      connection:
        time: ${REDIS_CONNECTION:300000} 
      syncronization:
        time: ${REDIS_SYNC:300000} # five minutes
  security:
    jwt:
      secret-key: ${SECRET-KEY}

management:
  endpoints:
    web:
      exposure:
        include: "health, info, prometheus" # health, info, loggers, metrics
  endpoint:
    health:
      show-details: always
    shutdown:
      access: none
logging:
  level:
    root: info
    org:
      springframework: warn
      boot: error
      data:
        redis: debug
  pattern:
    console: '%n %d{HH:mm:ss} | %highlight(%-5level) | %cyan(%logger{30}) | %msg'

info:
  app:
    name: ${project.name}
    description: ${project.description}
    version: ${project.version}
    java:
      version: ${java.version}